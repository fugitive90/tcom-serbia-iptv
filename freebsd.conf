#!/bin/sh
# Setup tested on FreeBSD and RaspberryPi 2
# Tested and working.

# Apply necessary modules on next boot
cat > /boot/loader.conf <<EOF
ip_mroute_load="yes"
if_vlan_load="YES"
EOF

# or temporary:
kldload if_vlan 
kldload ip_mroute


# Add necessary packages
pkg add isc-dhcpd

# /etc/rc.conf.local

cat > /etc/rc.conf.local  <<EOF
sshd_enable="YES"
devd_enable="YES"
devd_flags="-q"

ntpd_enable="YES"
ntpd_program="/usr/sbin/ntpd"   # path to ntpd, if you want a different one.
ntpd_config="/etc/ntp.conf"     # ntpd(8) configuration file
ntpd_sync_on_start="YES"         # Sync time on ntpd startup, even if offset is high
ntpd_flags="-p /var/run/ntpd.pid -f /var/db/ntpd.drift"

powerd_enable="YES"
local_openntpd_enable="NO"

# DHCPD server
dhcpd_enable="YES"                          # dhcpd enabled?
dhcpd_flags=""                            # command option(s)
dhcpd_conf="/usr/local/etc/dhcpd.conf"      # configuration file
dhcpd_ifaces="<ADD YOUR LAN INTERFACE HERE>"                             # ethernet interface(s)
dhcpd_withumask="022"                       # file creation mask

# PPP
ppp_enable="YES"
ppp_mode="auto"
ppp_profile="mts"

# SYSLOG
syslogd_enable="YES"

# PF
pf_enable="YES"
pflog_enable="YES"

###################################
#
#	Network configuration
#
#
###################################

# NB! 
# My setup:
# ue0 -> wan facing
# ue1 -> lan facing
# update approporiately
# I am using HP J4813A ProCurve  2524  managed switch where my LAN is untagged with id 500
# and 1 port untagged with id 200 (IPTV)
# Those vlans are tagged on trunk interface which goes to ue1 iface.
# If you are not using switch in your configuration .
# Then you will need two interfaces, one for lan and one for IPTV let say (re0).
# Make sure that you bridge re0 with tagged 200 external iface.
# For example: 
# ifconfig_bridge0="addm re0 addm ext200 up"

gateway_enable="YES"
netwait_enable="YES"
netwait_if_timeout="20"
netwait_if="ue0 ue1 int500 ext300 ext200 bridge0"

ifconfig_ue0="up"
ifconfig_ue1="up"

cloned_interfaces="ext200 ext300  int200 int500  bridge0"
cloned_interfaces_sticky="YES"

vlans_ue0="ext200 ext300"
create_args_ext200="vlan 200"
create_args_ext300="vlan 300"

vlans_ue1="int200 int500"
create_args_int200="vlan 200"
create_args_int500="vlan 500"

ifconfig_int500="inet 192.168.1.1 netmask 255.255.255.0 -tso -lro up"

ifconfig_bridge0="addm int200 addm ext200 up"
ifconfig_int200="up"
ifconfig_ext200="up"

EOF


# Setup PPPoe

cat > /etc/ppp/ppp.conf <<EOF

default:
        set log Chat Command Connect Filter Phase tun Error Alert
mts:
        set device PPPoE:ext300
        set redial 3 1
        set reconnect 3 23
        set mtu max 1492
        set mru max 1492
        set speed sync
        set server /var/run/internet "" 0177
        set dial
        set login
        set authname "<USERNAME>"
        set authkey "<PASSWORD>"
        disable acfcomp protocomp
        disable ipv6cp
	enable mssfixup
        enable lqr
        enable echo
        accept lqr
        add! default HISADDR
        set timeout 0
        open
EOF



# LAN setup
cat > /usr/local/etc/dhcp/dhcpd.conf <<EOF
option domain-name-servers 208.67.222.222, 208.67.220.220;
max-lease-time 86400;
ddns-update-style none;

subnet 192.168.1.0 netmask 255.255.255.0 {
  authoriative;
  range 192.168.1.2 192.168.1.254;
  option routers 192.168.1.1;
  option subnet-mask 255.255.255.0;
  option domain-name-servers 192.168.1.1;
  max-lease-time 18000;
  default-lease-time 7200 ;
}


EOF


# PF settings:
cat > /etc/pf.conf <<EOF
ext_if="tun0"
int_if="int500"
iptv_if="{ bridge0 , int200 , ext200 ,ue0 ,ue1 }" # Add all iptv related ifaces

table <bruteforce> persist file "/etc/pf.brute.list"

set skip on lo0
set loginterface $ext_if

set block-policy return
set fingerprints "/etc/pf.os"
scrub in all fragment reassemble random-id no-df max-mss 1460


nat on $ext_if from ($int_if:network) to any -> ($ext_if:0)

block in log on $ext_if 
block in log quick on $ext_if from <bruteforce> to ( $ext_if:network )

#anchor allow_ssh

# Allow incoming icmp
pass in quick on $ext_if  proto icmp 


# Pass mcast on wan iface
pass in  on $ext_if proto igmp to 224.0.0.0/4 allow-opts keep state
pass in  on $ext_if proto udp to 224.0.0.0/4 keep state
pass in  on $ext_if proto udp 


pass in on $int_if from $int_if:network
pass out on $int_if


pass  log quick on $iptv_if proto igmp to 224.0.0.4/4 allow-opts
pass  log quick on $iptv_if proto udp to 224.0.0.4/4 
pass  log quick on $iptv_if proto tcp


# Pass out
pass out on $ext_if  proto { tcp, udp, icmp }   modulate state
#pass out on $ext_if  keep state

EOF

# Now reboot both your FreeBSD router, check are all services running , then reboot STB 

