#!/bin/sh
# Setup tested on Alpine linux and RaspberryPi 3


modprobe 8021q # Load VLAN driver
modprobe pppoe # Load PPPoE 


# Add necessary packages
apk update
apk add ppp dhcp iptables rp-pppoe


# Create vlan interfaces
# Tcom Serbia VDSL uses tagged VLAN packets - ID 300 for Internet, ID 200 for IPTV

cat > /etc/network/interfaces <<EOF

auto lo
iface lo inet loopback

# IPTV vlan
auto vlan200
iface vlan200 inet manual
	vlan-raw-device eth0
	up ip link set $IFACE up
	down ip link set $IFACE down

# Internet vlan
auto vlan300
iface vlan300 inet manual
	vlan-raw-device eth0
	up ip link set $IFACE up
	down ip link set $IFACE down

# WAN iface
auto eth0
iface eth0 inet manual
	up ip link set $IFACE up
	down ip link set $IFACE down

# STB iface
auto eth1
iface eth1 inet manual
	up ip link set $IFACE up
#	up route add -net 224.0.0.0/4 eth1
#	down ip link set $IFACE down

# LAN iface
auto eth2
iface eth2 inet static
	address 192.168.1.1
	netmask 255.255.255.0
# PPP
iface mts inet ppp
	provider mts

# BRIDGE
auto br0
iface br0 inet manual
	up ip link set $IFACE up 
	down ip link set $IFACE down
	bridge_ports eth1 vlan200
EOF

# Reload the network
rc-service networking restart

# Setup PPPoe

cat /etc/ppp/pap-secrets
"username@xdsl.isp.telekom.yu" * "password" # Replace it with original username & password

#create a ppp configuration file:
cat > /etc/ppp/peers/mts <<EOF

noipdefault
defaultroute
defaultroute-metric 200
login
updetach
require-pap
plugin rp-pppoe.so vlan300
hide-password
lcp-echo-interval 20
lcp-echo-failure 3
noauth
persist
maxfail 0
mtu 1492
mru 1492
user "username@xdsl.isp.telekom.yu" # Replace it with username
bsdcomp 15
deflate 15
EOF

# Dial PPP

/usr/sbin/pppd file /etc/ppp/peers/mts

# LAN setup
cat > /etc/dhcp/dhcpd.conf <<EOF
default-lease-time 600;
max-lease-time 7200;
authoritative;
subnet 192.168.1.0 netmask 255.255.255.0 {
  range 192.168.1.2 192.168.1.254;
  option routers 192.168.1.1;
  default-lease-time 600;
  max-lease-time 7200;
}
EOF

# Add DHCP server on boot
rc-update add dhcp default


# STB setup

# Fire up tcpdump on Linux host and start sniffing on phy interface 
# where STB is connected to. In my setup - eth1
tcpdump -nnevi eth1 udp and port '(67 or 68)'

# Pay attention on DHCP options that STB gets, most important vendor id and MAC address of STB
# Vendor ID starts with "dslforum.org . . ."

# Masquerade our br0 etther MAC by editing last 3 bytes. This is important so we can get a dhcp IP from server.
# Example: 
# If STB's MAC is 11:22:33:44:55:66 , masquerade it like 11:22:33:8A:4F:5A
/sbin/ifconfig br0 down
/sbin/ifconfig br0 hw ether 11:22:33:8A:4F:5A
/sbin/ifconfig br0 up

# Get the IP from dhclient
# IP for my case are in 10.145.0.0/17 subnet
udhcpc -i br0 -V "vendorID"  -O domain router dns domainsd  -s /usr/share/udhcpc/default.script 

# Add a route
ip route add 10.145.0.0/17 via 10.145.128.1 dev br0




